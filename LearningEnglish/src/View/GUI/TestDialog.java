package View.GUI;

import Controller.Controller;
import Controller.WordControl;
import Model.Word;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Nguyễn Phúc
 */
public class TestDialog extends javax.swing.JFrame {
    
    private Controller mainController;
    private WordControl Controller;
    // Biến đếm số câu
    private int count;
    // Biến sinh ngẫu nhiên
    Random random = new Random();
    // Số câu trả lời đúng
    private int trueSum = 0;
    private Word currentWord = null;
    private ArrayList<Word> learnedWord;
    
    /**
     * Creates new form TestDialog
     */
    public TestDialog(Controller controller) {
        this.mainController = controller;
        this.Controller = controller.getWordController();
        initComponents();
        setIcon();
        this.learnedWord = Controller.getLearnedWord();
        
        if(canMakeATest()) {
            setupQuesttion(generateQuestion());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jlWord = new javax.swing.JLabel();
        janswerA = new javax.swing.JRadioButton();
        janswerB = new javax.swing.JRadioButton();
        janswerC = new javax.swing.JRadioButton();
        janswerD = new javax.swing.JRadioButton();
        jbOK = new javax.swing.JButton();
        jPronunce = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jQuestionCount = new javax.swing.JLabel();

        setTitle("Test");
        setResizable(false);

        jlWord.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jlWord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlWord.setText("jLabel");

        buttonGroup1.add(janswerA);

        buttonGroup1.add(janswerB);

        buttonGroup1.add(janswerC);

        buttonGroup1.add(janswerD);

        jbOK.setText("OK");
        jbOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOKActionPerformed(evt);
            }
        });

        jPronunce.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        jPronunce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPronunce.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setText("Select Answer:");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("A:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("B:");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("C:");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("D:");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jQuestionCount.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jQuestionCount.setText("jLabel6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jQuestionCount, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(81, 81, 81)
                                        .addComponent(jbOK, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(janswerA))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(6, 6, 6)
                                            .addComponent(janswerD))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(janswerB))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(janswerC))))
                                .addGap(0, 202, Short.MAX_VALUE))
                            .addComponent(jPronunce, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlWord, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {janswerA, janswerB, janswerC, janswerD});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlWord, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jPronunce, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(janswerA)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(janswerB))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(57, 57, 57)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(janswerC))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(janswerD, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbOK, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jQuestionCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private Word generateQuestion() {
        this.currentWord = learnedWord.get(random.nextInt(learnedWord.size()));
        return this.currentWord;
    }
    
    public boolean canMakeATest() {
        return !this.learnedWord.isEmpty();
    }
    
    /**
     * setup question for dialog
     *
     * @param answer dap an
     */
    private void setupQuesttion(Word answer) {
        if (answer == null) {
            return;
        }
        this.count ++;
        jlWord.setText(answer.getName());
        jPronunce.setText(answer.getPronunciation());
        jQuestionCount.setText("Question " + (this.count));
        setupAnswer(answer);
    }

    /**
     * set up answer for dialog
     *
     * @param answer dap an
     */
    private void setupAnswer(Word answer) {
        int numOfWords = Controller.getListWord().size();
        ArrayList<Word> answers = new ArrayList<Word>();
        answers.add(answer);
        // get 3 word random
        answers.add(Controller.getWord(random.nextInt(numOfWords)));
        answers.add(Controller.getWord(random.nextInt(numOfWords)));
        answers.add(Controller.getWord(random.nextInt(numOfWords)));
        setupSelector(answers);
    }

    private void setupSelector(ArrayList<Word> listAnswer) {
        Collections.shuffle(listAnswer);
        janswerA.setText(listAnswer.get(0).getMeaning());
        janswerB.setText(listAnswer.get(1).getMeaning());
        janswerC.setText(listAnswer.get(2).getMeaning());
        janswerD.setText(listAnswer.get(3).getMeaning());
    }

    private boolean checkAnswer() {
        boolean isTrue = false;
        if (janswerA.isSelected()) {
            if (janswerA.getText().equalsIgnoreCase(this.currentWord.getMeaning())) {
                isTrue = true;
            }
        } else if (janswerB.isSelected()) {
            if (janswerB.getText().equalsIgnoreCase(this.currentWord.getMeaning())) {
                isTrue = true;
            }
        } else if (janswerC.isSelected()) {
            if (janswerC.getText().equalsIgnoreCase(this.currentWord.getMeaning())) {
                isTrue = true;
            }
        } else if (janswerD.isSelected()) {
            if (janswerD.getText().equalsIgnoreCase(this.currentWord.getMeaning())) {
                isTrue = true;
            }
        }
        return isTrue;
    }

    /**
     * Tạo sự kiện cho jbOK
     *
     * @param evt Sự kiện
     */
    private void jbOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOKActionPerformed

        if (checkAnswer()) {
            trueSum++;
        }
        if (count < 9) {
            // not finished the test
            setupQuesttion(generateQuestion());
        } else {
            // finished the test
            this.setVisible(false);
            count = 0;
            JOptionPane.showMessageDialog(null, "Số câu đúng: " + String.valueOf(trueSum), "Information", JOptionPane.INFORMATION_MESSAGE);
            trueSum = 0;
        }
    }//GEN-LAST:event_jbOKActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jPronunce;
    private javax.swing.JLabel jQuestionCount;
    private javax.swing.JRadioButton janswerA;
    private javax.swing.JRadioButton janswerB;
    private javax.swing.JRadioButton janswerC;
    private javax.swing.JRadioButton janswerD;
    private javax.swing.JButton jbOK;
    private javax.swing.JLabel jlWord;
    // End of variables declaration//GEN-END:variables

    /**
     * Cài đặt icon
     */
    private void setIcon() {
        ImageIcon icon = new ImageIcon("src/View/TitleIcons/IconTest.png");
        setIconImage(icon.getImage());
    }
}
